//package com.vimukti.accounter.core;
//
//import java.io.Serializable;
//
//import org.hibernate.CallbackException;
//import org.hibernate.Session;
//import org.hibernate.classic.Lifecycle;
//import org.json.JSONException;
//
//import com.vimukti.accounter.web.client.Global;
//import com.vimukti.accounter.web.client.exception.AccounterException;
//import com.vimukti.accounter.web.client.externalization.AccounterMessages;
//
///**
// * 
// * For every {@link IssuePayment} entry there will be one or more
// * TransactionIssuePayment entries. These are populated whenever any transaction
// * involves payment method as 'Check' and has to be printed.
// * 
// * @author Chandan
// * 
// */
//public class TransactionIssuePayment implements IAccounterServerCore, Lifecycle {
//
//	/**
//	 * 
//	 */
//	private static final long serialVersionUID = -3092025774192829205L;
//
//	/**
//	 * A Unique long id Generated By Hibernate.
//	 */
//	long id;
//
//	/**
//	 * Transaction Issue payment Date.
//	 */
//	FinanceDate date;
//
//	String number;
//
//	/**
//	 * This is used to indicate the name of the payee
//	 */
//	String name;
//
//	String memo;
//
//	/**
//	 * The amount that how much we have to pay in this TransationIssuePayment
//	 */
//	double amount = 0D;
//
//	/**
//	 * The transaction reference holds the Issue Payment reference which holds
//	 * the TransactionIssuePayment
//	 */
//	Transaction transaction;
//
//	/**
//	 * Reference to a write check to know that this TransactionIssuePayment is
//	 * caused by WriteCheck
//	 */
//	WriteCheck writeCheck;
//
//	/**
//	 * Reference to a CustomerRefund to know that this TransactionIssuePayment
//	 * is caused by CustomerRefund
//	 */
//	CustomerRefund customerRefund;
//
//	/**
//	 * Reference to a PayBill to know that this TransactionIssuePayment is
//	 * caused by PayBill
//	 */
//	PayBill payBill;
//
//	/**
//	 * Reference to a PayBill to know that this TransactionIssuePayment is
//	 * caused by PayBill
//	 */
//	CreditCardCharge creditCardCharge;
//
//	/**
//	 * Reference to a CashPurchase to know that this TransactionIssuePayment is
//	 * caused by CashPurchase
//	 */
//	CashPurchase cashPurchase;
//
//	/**
//	 * Reference to a PaySalesTax to know that this TransactionIssuePayment is
//	 * caused by PaySalesTax
//	 */
//	PayTAX paySalesTax;
//	/**
//	 * Reference to a ReceiveVAT to know that this TransactionIssuePayment is
//	 * caused by ReceiveVAT
//	 */
//	ReceiveVAT receiveVAT;
//	/**
//	 * Reference to a PayVAT to know that this TransactionIssuePayment is caused
//	 * by PayVAT
//	 */
//	PayTAX payVAT;
//	/**
//	 * Reference to a CustomerPrepayment to know that this
//	 * TransactionIssuePayment is caused by CustomerPrepayment
//	 */
//	private CustomerPrePayment customerPrepayment;
//
//	int version;
//
//	transient private boolean isOnSaveProccessed;
//
//	public TransactionIssuePayment() {
//
//	}
//
//	/**
//	 * @return the payBill
//	 */
//	public PayBill getPayBill() {
//		return payBill;
//	}
//
//	/**
//	 * @param payBill
//	 *            the payBill to set
//	 */
//	public void setPayBill(PayBill payBill) {
//		this.payBill = payBill;
//	}
//
//	/**
//	 * @return the creditCardCharge
//	 */
//	public CreditCardCharge getCreditCardCharge() {
//		return creditCardCharge;
//	}
//
//	/**
//	 * @param creditCardCharge
//	 *            the creditCardCharge to set
//	 */
//	public void setCreditCardCharge(CreditCardCharge creditCardCharge) {
//		this.creditCardCharge = creditCardCharge;
//	}
//
//	/**
//	 * @return the cashPurchase
//	 */
//	public CashPurchase getCashPurchase() {
//		return cashPurchase;
//	}
//
//	/**
//	 * @param cashPurchase
//	 *            the cashPurchase to set
//	 */
//	public void setCashPurchase(CashPurchase cashPurchase) {
//		this.cashPurchase = cashPurchase;
//	}
//
//	/**
//	 * @return the paySalesTax
//	 */
//	public PayTAX getPaySalesTax() {
//		return paySalesTax;
//	}
//
//	/**
//	 * @param paySalesTax
//	 *            the paySalesTax to set
//	 */
//	public void setPaySalesTax(PayTAX paySalesTax) {
//		this.paySalesTax = paySalesTax;
//	}
//
//	/**
//	 * @return the payVAT
//	 */
//
//	public PayTAX getPayVAT() {
//		return payVAT;
//	}
//
//	/**
//	 * @param payVAT
//	 *            the payVAT to set
//	 */
//	public void setPayVAT(PayTAX payVAT) {
//		this.payVAT = payVAT;
//	}
//
//	/**
//	 * @return the receiveVAT
//	 */
//	public ReceiveVAT getReceiveVAT() {
//		return receiveVAT;
//	}
//
//	/**
//	 * @param receiveVAT
//	 *            the receiveVAT to set
//	 */
//	public void setReceiveVAT(ReceiveVAT receiveVAT) {
//		this.receiveVAT = receiveVAT;
//	}
//
//	/**
//	 * @return the CustomerPrePayment
//	 */
//	public CustomerPrePayment getCustomerPrepayment() {
//		return customerPrepayment;
//	}
//
//	/**
//	 * @param CustomerPrePayment
//	 *            the CustomerPrePayment to set
//	 */
//	public void setCustomerPrepayment(CustomerPrePayment customerPrepayment) {
//		this.customerPrepayment = customerPrepayment;
//	}
//
//	public int getVersion() {
//		return version;
//	}
//
//	/**
//	 * @return the date
//	 */
//	public FinanceDate getDate() {
//		return date;
//	}
//
//	/**
//	 * @return the writeCheck
//	 */
//	public WriteCheck getWriteCheck() {
//		return writeCheck;
//	}
//
//	/**
//	 * @param writeCheck
//	 *            the writeCheck to set
//	 */
//	public void setWriteCheck(WriteCheck writeCheck) {
//		this.writeCheck = writeCheck;
//	}
//
//	/**
//	 * @return the number
//	 */
//	public String getNumber() {
//		return number;
//	}
//
//	/**
//	 * @return the name
//	 */
//	public String getName() {
//		return name;
//	}
//
//	/**
//	 * @return the memo
//	 */
//	public String getMemo() {
//		return memo;
//	}
//
//	/**
//	 * @return the amount
//	 */
//	public double getAmount() {
//		return amount;
//	}
//
//	/**
//	 * @return the transaction
//	 */
//	public Transaction getTransaction() {
//		return transaction;
//	}
//
//	/**
//	 * @return the customerRefund
//	 */
//	public CustomerRefund getCustomerRefund() {
//		return customerRefund;
//	}
//
//	/**
//	 * @param customerRefund
//	 *            the customerRefund to set
//	 */
//	public void setCustomerRefund(CustomerRefund customerRefund) {
//		this.customerRefund = customerRefund;
//	}
//
//	@Override
//	public boolean onDelete(Session arg0) throws CallbackException {
//		// ChangeTracker.put(this);
//		return false;
//	}
//
//	@Override
//	public void onLoad(Session arg0, Serializable arg1) {
//
//	}
//
//	@Override
//	public boolean onSave(Session session) throws CallbackException {
//		if (this.isOnSaveProccessed)
//			return true;
//		this.isOnSaveProccessed = true;
//		IssuePayment issuePayment = (IssuePayment) this.transaction;
//
//		if (this.id == 0l) {
//
//			if (this.writeCheck != null) {
//
//				// Update the Status of Write Check as Issued
//				this.writeCheck
//						.setStatus(Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				this.writeCheck.setCheckNumber(issuePayment.getCheckNumber());
//				session.saveOrUpdate(this.writeCheck);
//
//			} else if (this.getCustomerRefund() != null) {
//
//				// Update the Status of Customer Refund as Issued
//				this.customerRefund
//						.setStatus(Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				this.customerRefund.setCheckNumber(issuePayment
//						.getCheckNumber());
//				session.saveOrUpdate(this.customerRefund);
//			} else if (this.getPayBill() != null) {
//
//				// Update the Status of Customer Refund as Issued
//				this.getPayBill().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				this.getPayBill().setCheckNumber(issuePayment.getCheckNumber());
//				session.saveOrUpdate(this.getPayBill());
//			} else if (this.getPaySalesTax() != null) {
//
//				// Update the Status of Customer Refund as Issued
//				this.getPaySalesTax().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				session.saveOrUpdate(this.getPaySalesTax());
//			} else if (this.getCreditCardCharge() != null) {
//
//				// Update the Status of Customer Refund as Issued
//				this.getCreditCardCharge().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				session.saveOrUpdate(this.getCreditCardCharge());
//			} else if (this.getCashPurchase() != null) {
//
//				// Update the Status of Customer Refund as Issued
//				this.getCashPurchase().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				this.getCashPurchase().setCheckNumber(
//						issuePayment.getCheckNumber());
//				session.saveOrUpdate(this.getCashPurchase());
//
//			} else if (this.getPayVAT() != null) {
//
//				// Update the Status of Pay Vat vat as Issued
//				this.getPayVAT().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				session.saveOrUpdate(this.getPayVAT());
//
//			} else if (this.getReceiveVAT() != null) {
//
//				// Update the Status of Receive Vat as Issued
//				this.getReceiveVAT().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				session.saveOrUpdate(this.getReceiveVAT());
//
//			} else if (this.getCustomerPrepayment() != null) {
//				// Update the Status of CustomerPrepayment as Issued
//				this.getCustomerPrepayment().setStatus(
//						Transaction.STATUS_PAID_OR_APPLIED_OR_ISSUED);
//				this.getCustomerPrepayment().setCheckNumber(
//						issuePayment.getCheckNumber());
//				session.saveOrUpdate(this.getCustomerPrepayment());
//			}
//
//		}
//		return false;
//	}
//
//	@Override
//	public boolean onUpdate(Session arg0) throws CallbackException {
//		// ChangeTracker.put(this);
//		return false;
//	}
//
//	@Override
//	public long getID() {
//
//		return this.id;
//	}
//
//	@Override
//	public boolean canEdit(IAccounterServerCore clientObject)
//			throws AccounterException {
//
//		return true;
//	}
//
//	@Override
//	public void setVersion(int version) {
//		this.version = version;
//	}
//
//	@Override
//	public void writeAudit(AuditWriter w) throws JSONException {
//
//		AccounterMessages messages = Global.get().messages();
//
//		w.put(messages.type(), "Transaction Issue Payment").gap();
//
//		w.put(messages.date(), this.date.toString());
//
//		w.put(messages.number(), this.number);
//
//		w.put(messages.name(), this.name);
//
//		w.put(messages.memo(), this.memo);
//
//		w.put(messages.amount(), this.amount);
//
//		if (transaction != null)
//			w.put(messages.transaction(), this.transaction.getNumber());
//
//		if (writeCheck != null)
//			w.put(messages.writeCheck(), this.writeCheck.getNumber());
//
//		if (customerRefund != null)
//			w.put(messages.customerRefund(messages.Customer()), this.customerRefund.getNumber());
//
//		if (payBill != null)
//			w.put(messages.payBill(), this.payBill.getNumber());
//
//		if (creditCardCharge != null)
//			w.put(messages.creditCardCharge(),
//					this.creditCardCharge.getNumber());
//
//		if (cashPurchase != null)
//			w.put(messages.cashPurchase(), this.cashPurchase.getNumber());
//
//		if (receiveVAT != null)
//			w.put(messages.receiveVAT(), this.receiveVAT.getNumber());
//
//		if (paySalesTax != null)
//			w.put(messages.salesTax(), this.paySalesTax.getNumber());
//
//		if (payVAT != null)
//			w.put(messages.payVAT(), this.payVAT.getNumber());
//
//		if (customerPrepayment != null)
//			w.put(messages.customerprePayment(),
//					this.customerPrepayment.getNumber());
//
//	}
//
// }
